# Generated by Django 5.0.6 on 2025-09-22 17:56

import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="O e-mail será usado para login.",
                        max_length=254,
                        unique=True,
                        verbose_name="endereço de e-mail",
                    ),
                ),
                ("password_hash", models.CharField(blank=True, max_length=128)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("OFERTANTE", "Ofertante"),
                            ("COMPRADOR", "Comprador"),
                        ],
                        max_length=10,
                        verbose_name="tipo de usuário",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verificado"),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendente"),
                            ("APPROVED", "Aprovado"),
                            ("REJECTED", "Rejeitado"),
                        ],
                        default="PENDING",
                        max_length=10,
                        verbose_name="status da verificação",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CompradorDocuments",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("POLITICA_SUSTENTABILIDADE", "Política Sustentabilidade"),
                            ("RELATORIO_ESG", "Relatório ESG"),
                            ("COMPROMISSO_CARBONO", "Compromisso Carbono"),
                            ("CERTIFICACAO_ISO", "Certificação ISO"),
                        ],
                        max_length=50,
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file", models.FileField(upload_to="compradores/documents/")),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("verified", models.BooleanField(default=False)),
                (
                    "uploaded_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprador_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompradorOrganization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                (
                    "cnpj",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[users.models.validate_cnpj],
                    ),
                ),
                (
                    "industry_sector",
                    models.CharField(
                        choices=[
                            ("MINERACAO", "Mineração"),
                            ("PETROLEO", "Petróleo"),
                            ("SIDERURGIA", "Siderurgia"),
                            ("BANCARIO", "Bancário"),
                            ("MANUFATURA", "Manufatura"),
                            ("OUTROS", "Outros"),
                        ],
                        default="OUTROS",
                        max_length=50,
                    ),
                ),
                (
                    "company_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PEQUENA", "Pequena"),
                            ("MEDIA", "Média"),
                            ("GRANDE", "Grande"),
                            ("MULTINACIONAL", "Multinacional"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("is_publicly_traded", models.BooleanField(default=False)),
                (
                    "stock_ticker",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "annual_revenue",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MENOS_50M", "Menos_50M"),
                            ("50M_500M", "50M-500M"),
                            ("500M_2B", "500M-2B"),
                            ("MAIS_2B", "Mais_2B"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("employees_count", models.PositiveIntegerField(blank=True, null=True)),
                ("esg_rating", models.CharField(blank=True, max_length=50, null=True)),
                ("carbon_commitment", models.TextField(blank=True, null=True)),
                ("website", models.URLField()),
                ("linkedin", models.URLField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprador_organization",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompradorProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "contact_position",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(max_length=50)),
                (
                    "internal_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprador_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompradorRequirements",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("annual_carbon_target", models.PositiveIntegerField()),
                ("compensation_deadline", models.DateField()),
                ("preferred_regions", models.JSONField(blank=True, default=list)),
                ("preferred_project_types", models.JSONField(blank=True, default=list)),
                ("required_certifications", models.JSONField(blank=True, default=list)),
                (
                    "min_project_volume",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "max_project_volume",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "budget_range",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ATE_50K", "Até 50K"),
                            ("50K_200K", "50K-200K"),
                            ("200K_1M", "200K-1M"),
                            ("MAIS_1M", "Mais 1M"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("additionality_requirements", models.BooleanField(default=False)),
                (
                    "vintage_preference",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprador_requirements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OfertanteDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("ESTATUTO_SOCIAL", "Estatuto Social"),
                            ("LICENCA_AMBIENTAL", "Licença Ambiental"),
                            ("CERTIFICACAO_TECNICA", "Certificação Técnica"),
                            ("COMPROVANTE_ATIVIDADE", "Comprovante de Atividade"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Documento",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="ofertante_documents/%Y/%m/%d/",
                        verbose_name="Arquivo",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="Verificado"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ofertante_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OfertanteProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(max_length=255, verbose_name="Nome do Contato"),
                ),
                (
                    "contact_position",
                    models.CharField(max_length=100, verbose_name="Cargo do Contato"),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Telefone")),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("ONG", "ONG"),
                            ("EMPRESA_PRIVADA", "Empresa Privada"),
                            ("COOPERATIVA", "Cooperativa"),
                            ("PROJETO_INDEPENDENTE", "Projeto Independente"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Organização",
                    ),
                ),
                (
                    "organization_name",
                    models.CharField(
                        max_length=255, verbose_name="Nome da Organização"
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(
                        blank=True,
                        max_length=18,
                        null=True,
                        unique=True,
                        verbose_name="CNPJ",
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Descrição (Missão/Visão)"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ofertante_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
