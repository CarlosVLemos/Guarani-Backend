# Generated by Django 5.0.6 on 2025-09-01 21:30

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="O e-mail será usado para login.",
                        max_length=254,
                        unique=True,
                        verbose_name="endereço de e-mail",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("OFERTANTE", "Ofertante"),
                            ("COMPRADOR", "Comprador"),
                        ],
                        max_length=10,
                        verbose_name="tipo de usuário",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verificado"),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendente"),
                            ("APPROVED", "Aprovado"),
                            ("REJECTED", "Rejeitado"),
                        ],
                        default="PENDING",
                        max_length=10,
                        verbose_name="status da verificação",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OfertanteDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("ESTATUTO_SOCIAL", "Estatuto Social"),
                            ("LICENCA_AMBIENTAL", "Licença Ambiental"),
                            ("CERTIFICACAO_TECNICA", "Certificação Técnica"),
                            ("COMPROVANTE_ATIVIDADE", "Comprovante de Atividade"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Documento",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="ofertante_documents/%Y/%m/%d/",
                        verbose_name="Arquivo",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="Verificado"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ofertante_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OfertanteProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(max_length=255, verbose_name="Nome do Contato"),
                ),
                (
                    "contact_position",
                    models.CharField(max_length=100, verbose_name="Cargo do Contato"),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Telefone")),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("ONG", "ONG"),
                            ("EMPRESA_PRIVADA", "Empresa Privada"),
                            ("COOPERATIVA", "Cooperativa"),
                            ("PROJETO_INDEPENDENTE", "Projeto Independente"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Organização",
                    ),
                ),
                (
                    "organization_name",
                    models.CharField(
                        max_length=255, verbose_name="Nome da Organização"
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(
                        blank=True,
                        max_length=18,
                        null=True,
                        unique=True,
                        verbose_name="CNPJ",
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Descrição (Missão/Visão)"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ofertante_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
